// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// C++ TLBWRTR : $Revision:   1.96.1.40  $
// File generated on 11/27/2003 5:28:35 PM from Type Library described below.

// ************************************************************************ //
// Type Lib: C:\DX\DEMOS\Installations\Printing System\PS3BCB\Windows-ShellExtension\PrintCapabilities.tlb
// IID\LCID: {D5E2DECC-A07A-494C-9367-C279E6982976}\0
// Helpfile: 
// DepndLst: 
//   (1) v2.0 stdole, (C:\WINDOWS\System32\stdole2.tlb)
//   (2) v4.0 StdVCL, (C:\WINDOWS\System32\STDVCL40.DLL)
// ************************************************************************ //
#ifndef   __PrintCapabilities_TLB_h__
#define   __PrintCapabilities_TLB_h__

#pragma option push -b -w-inl

#include <vcl/utilcls.h>
#if !defined(__UTILCLS_H_VERSION) || (__UTILCLS_H_VERSION < 0x0102)
//
// The code generated by the TLIBIMP utility or the Import|TypeLibrary 
// and Import|ActiveX feature of C++Builder rely on specific versions of
// the header file UTILCLS.H found in the INCLUDE\VCL directory. If an 
// older version of the file is detected, you probably need an update/patch.
//
// NOTE: If the following error is triggered, you probably need to     
//       get a patch to the TLIBIMP.EXE utility or the C++Builder IDE. 
//       Patches/updates are posted on the Borland Website.            
//
#error "This file requires a newer version of the header UTILCLS.H" \
       "You need to apply an update/patch to your copy of C++Builder"
#endif
#include <olectl.h>
#include <ocidl.h>
#if defined(USING_ATLVCL) || defined(USING_ATL)
#if !defined(__TLB_NO_EVENT_WRAPPERS)
#include <atl/atlmod.h>
#endif
#endif

namespace Printcapabilities_tlb
{

// *********************************************************************//
// HelpString: Project2 Library
// Version:    1.0
// *********************************************************************//


// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLSID_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
extern const GUID LIBID_PrintCapabilities;
extern const GUID IID_IdxPSContextMenu;
extern const GUID CLSID_dxPSContextMenu;

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
interface DECLSPEC_UUID("{D54D20B1-4BD3-4EA8-975C-A7660B38FE08}") IdxPSContextMenu;
typedef TComInterface<IdxPSContextMenu, &IID_IdxPSContextMenu> IdxPSContextMenuPtr;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
//                                                                        
// The LIBID_OF_ macro(s) map a LIBID_OF_CoClassName to the GUID of this  
// TypeLibrary. It simplifies the updating of macros when CoClass name    
// change.                                                                
// *********************************************************************//
typedef IdxPSContextMenu dxPSContextMenu;
typedef TComInterface<dxPSContextMenu, &IID_IdxPSContextMenu> dxPSContextMenuPtr;

#define LIBID_OF_dxPSContextMenu (&LIBID_PrintCapabilities)
// *********************************************************************//
// Interface: IdxPSContextMenu
// Flags:     (0)
// GUID:      {D54D20B1-4BD3-4EA8-975C-A7660B38FE08}
// *********************************************************************//
interface IdxPSContextMenu : public IUnknown
{
public:

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)



#endif //   __TLB_NO_INTERFACE_WRAPPERS

};

#if !defined(__TLB_NO_INTERFACE_WRAPPERS)
// *********************************************************************//
// SmartIntf: TCOMIdxPSContextMenu
// Interface: IdxPSContextMenu
// *********************************************************************//
template <class T /* IdxPSContextMenu */ >
class TCOMIdxPSContextMenuT : public TComInterface<IdxPSContextMenu>, public TComInterfaceBase<IUnknown>
{
public:
  TCOMIdxPSContextMenuT() {}
  TCOMIdxPSContextMenuT(IdxPSContextMenu *intf, bool addRef = false) : TComInterface<IdxPSContextMenu>(intf, addRef) {}
  TCOMIdxPSContextMenuT(const TCOMIdxPSContextMenuT& src) : TComInterface<IdxPSContextMenu>(src) {}
  TCOMIdxPSContextMenuT& operator=(const TCOMIdxPSContextMenuT& src) { Bind(src, true); return *this;}


};
typedef TCOMIdxPSContextMenuT<IdxPSContextMenu> TCOMIdxPSContextMenu;

// *********************************************************************//
// SmartIntf: TCOMIdxPSContextMenu
// Interface: IdxPSContextMenu
// *********************************************************************//
// *********************************************************************//
// The following typedefs expose classes (named CoCoClassName) that       
// provide static Create() and CreateRemote(LPWSTR machineName) methods   
// for creating an instance of an exposed object. These functions can     
// be used by client wishing to automate CoClasses exposed by this        
// typelibrary.                                                           
// *********************************************************************//

// *********************************************************************//
// COCLASS DEFAULT INTERFACE CREATOR
// CoClass  : dxPSContextMenu
// Interface: TCOMIdxPSContextMenu
// *********************************************************************//
typedef TCoClassCreatorT<TCOMIdxPSContextMenu, IdxPSContextMenu, &CLSID_dxPSContextMenu, &IID_IdxPSContextMenu> CodxPSContextMenu;
#endif  //   __TLB_NO_INTERFACE_WRAPPERS


};     // namespace Printcapabilities_tlb

#if !defined(NO_IMPLICIT_NAMESPACE_USE)
using  namespace Printcapabilities_tlb;
#endif

#pragma option pop

#endif // __PrintCapabilities_TLB_h__
